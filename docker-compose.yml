# docker-compose 版本號
version: '3'

networks:
  laravel:

# 撰寫 container 服務
services:
  nginx:
    image: library/nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
      - redis
    networks:
      - laravel

  mysql:
    image: mysql:8.0.21
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=meeting
      - MYSQL_USER=meeting
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
      - TZ="Asia/Taipei"
    networks:
      - laravel

  redis:
    image: redis:6.0.6-alpine
    container_name: redis
    volumes:
      - ./redis:/data
    ports:
      - "6379:6379"
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  npm:
    image: node:12.18.3-alpine
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel